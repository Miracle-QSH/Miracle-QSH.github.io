<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++中的引用、const、动态内存分配</title>
      <link href="/2020/02/01/C++%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%81const%E3%80%81%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/"/>
      <url>/2020/02/01/C++%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8%E3%80%81const%E3%80%81%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 用于回顾C++中的引用、const、动态内存分配</p><a id="more"></a><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>某个变量的引用，等价于这个变量，相当于这个变量的别名，例如</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> &amp;r = n;</span></pre></td></tr></table></figure><h4 id="引用的特点"><a href="#引用的特点" class="headerlink" title="引用的特点"></a>引用的特点</h4><ul><li>定义引用时必须初始化</li><li>不可赋值与修改</li><li>只能引用变量，不能引用常量和表达式</li></ul><h4 id="函数的引用"><a href="#函数的引用" class="headerlink" title="函数的引用"></a>函数的引用</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> &amp; <span class="title">A</span><span class="params">()</span></span>&#123;<span class="keyword">return</span> n;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//等价于n的引用</span></span></pre></td></tr></table></figure><h4 id="常引用"><a href="#常引用" class="headerlink" title="常引用"></a>常引用</h4><p>不可改变的引用，但可通过被引用对象修改内容</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp;r = n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">r = <span class="number">100</span>; <span class="comment">// 错误</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">n = <span class="number">100</span>; <span class="comment">//正确</span></span></pre></td></tr></table></figure><h4 id="常引用和非常引用的转换"><a href="#常引用和非常引用的转换" class="headerlink" title="常引用和非常引用的转换"></a>常引用和非常引用的转换</h4><ul><li>T &amp;类型的引用或T类型的变量可以用来初始化const T &amp;类型的引用</li><li>const T &amp;类型的引用和const T类型的变量不能用来初始化T &amp;类型的引用，除非进行强制类型转换</li></ul><h3 id="const"><a href="#const" class="headerlink" title="const"></a>const</h3><h4 id="定义常量"><a href="#定义常量" class="headerlink" title="定义常量"></a>定义常量</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX = <span class="number">0x3f3f3f</span>;</span></pre></td></tr></table></figure><h4 id="定义常量指针"><a href="#定义常量指针" class="headerlink" title="定义常量指针"></a>定义常量指针</h4><ul><li>不可通过常量指针修改指向的内容</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *p = &amp;n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">*p = <span class="number">100</span>; <span class="comment">//错误</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">n = <span class="number">100</span>; <span class="comment">//正确</span></span></pre></td></tr></table></figure><ul><li>不能把常量指针赋值给非常量指针，反之可以</li></ul><h4 id="定义常引用"><a href="#定义常引用" class="headerlink" title="定义常引用"></a>定义常引用</h4><h3 id="动态内存分配"><a href="#动态内存分配" class="headerlink" title="动态内存分配"></a>动态内存分配</h3><h4 id="用new运算符实现动态内存分配"><a href="#用new运算符实现动态内存分配" class="headerlink" title="用new运算符实现动态内存分配"></a>用new运算符实现动态内存分配</h4><ul><li><p>动态分配一个变量的存储空间</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">P = <span class="keyword">new</span> T;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// T是任意类型名，P是类型为T*的指针</span></span></pre></td></tr></table></figure></li><li><p>动态分配一个数组</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">P = <span class="keyword">new</span> T[N];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// T是任意类型名，P是类型为T*的指针，N为数组元素个数</span></span></pre></td></tr></table></figure></li></ul><h4 id="用delete运算符释放动态内存分配"><a href="#用delete运算符释放动态内存分配" class="headerlink" title="用delete运算符释放动态内存分配"></a>用delete运算符释放动态内存分配</h4><ul><li><p>delete 必须指向new出来的空间</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> p;</span></pre></td></tr></table></figure></li><li><p>一片空间不能被delete多次</p></li><li><p>delete数组要在指针前加[]</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> []p;</span></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言知识回顾</title>
      <link href="/2020/01/31/C%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/"/>
      <url>/2020/01/31/C%E8%AF%AD%E8%A8%80%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> 用于回顾C语言中比较复杂与困难的知识点</p><a id="more"></a><h3 id="函数指针"><a href="#函数指针" class="headerlink" title="函数指针"></a>函数指针</h3><p>程序运行期间，每个函数都会占用一段连续内存空间，函数名为入口地址，指向函数入口地址的指针变量成为“函数指针”</p><h3 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h3><p>cmd窗口中以空格隔开的一行命令为命令行参数，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">copy file1.txt file2.txt</span></pre></td></tr></table></figure><p>其中“copy”，“file1.txt”，“file2.txt”为命令行参数</p><p>在C程序中表现为</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 函数体</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>其中argc为命令行参数个数，*argv[]为参数列表（字符串）</p><h3 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h3><table><thead><tr><th>运算符</th><th>功能</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与（双目）</td></tr><tr><td>|</td><td>按位或（双目）</td></tr><tr><td>^</td><td>按位异或（双目）</td></tr><tr><td>~</td><td>按位取反（单目）</td></tr><tr><td>&lt;&lt;</td><td>左移（双目）</td></tr><tr><td>&gt;&gt;</td><td>右移（双目）</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试学习资料汇总</title>
      <link href="/2020/01/14/%E9%9D%A2%E8%AF%95%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/"/>
      <url>/2020/01/14/%E9%9D%A2%E8%AF%95%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>用于记录准备面试过程中各类学习资料</p><a id="more"></a><h2 id="面试学习资料汇总"><a href="#面试学习资料汇总" class="headerlink" title="面试学习资料汇总"></a>面试学习资料汇总</h2><h3 id="CyC-2018-笔记"><a href="#CyC-2018-笔记" class="headerlink" title="CyC 2018 笔记"></a>CyC 2018 笔记</h3><p><a href="https://cyc2018.github.io/CS-Notes/#/" target="_blank" rel="noopener">传送链接</a></p><h3 id="牛客面试题汇总"><a href="#牛客面试题汇总" class="headerlink" title="牛客面试题汇总"></a>牛客面试题汇总</h3><p><a href="https://www.nowcoder.com/tutorial/93/8ba2828006dd42879f3a9029eabde9f1" target="_blank" rel="noopener">传送链接</a></p>]]></content>
      
      
      <categories>
          
          <category> 面试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指offer&amp;&amp;Leetcode源码</title>
      <link href="/2020/01/14/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/"/>
      <url>/2020/01/14/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>用于记录面试准备过程中算法与数据结构部分的刷题</p><a id="more"></a><h2 id="Github-地址"><a href="#Github-地址" class="headerlink" title="Github 地址"></a>Github 地址</h2><p><a href="https://github.com/miracle-qsh/algorithm" target="_blank" rel="noopener">https://github.com/miracle-qsh/algorithm</a></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
